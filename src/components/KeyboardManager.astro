---
import 'hotkeypad/reset.css'
import 'hotkeypad/index.css'
import { type SocialIcon } from '@/types'
import { basics } from '@cv'
import { Icon } from 'astro-icon/components'

const { profiles } = basics

const SOCIAL_ICONS: SocialIcon = {
  GitHub: `<svg 
            xmlns="http://www.w3.org/2000/svg" 
            width="20" height="20" 
            viewBox="0 0 24 24">
              <path fill="currentColor" d="M12 2A10 10 0 0 0 2 12c0 4.42 2.87 8.17 6.84 9.5c.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34c-.46-1.16-1.11-1.47-1.11-1.47c-.91-.62.07-.6.07-.6c1 .07 1.53 1.03 1.53 1.03c.87 1.52 2.34 1.07 2.91.83c.09-.65.35-1.09.63-1.34c-2.22-.25-4.55-1.11-4.55-4.92c0-1.11.38-2 1.03-2.71c-.1-.25-.45-1.29.1-2.64c0 0 .84-.27 2.75 1.02c.79-.22 1.65-.33 2.5-.33s1.71.11 2.5.33c1.91-1.29 2.75-1.02 2.75-1.02c.55 1.35.2 2.39.1 2.64c.65.71 1.03 1.6 1.03 2.71c0 3.82-2.34 4.66-4.57 4.91c.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12A10 10 0 0 0 12 2"/>
          </svg>`,
  LinkedIn: `<svg 
              xmlns="http://www.w3.org/2000/svg"
              width="20" 
              height="20" 
              viewBox="0 0 24 24">
                <path fill="currentColor" d="M19 3a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2zm-.5 15.5v-5.3a3.26 3.26 0 0 0-3.26-3.26c-.85 0-1.84.52-2.32 1.3v-1.11h-2.79v8.37h2.79v-4.93c0-.77.62-1.4 1.39-1.4a1.4 1.4 0 0 1 1.4 1.4v4.93zM6.88 8.56a1.68 1.68 0 0 0 1.68-1.68c0-.93-.75-1.69-1.68-1.69a1.69 1.69 0 0 0-1.69 1.69c0 .93.76 1.68 1.69 1.68m1.39 9.94v-8.37H5.5v8.37z"/>
            </svg>`,
  Devpost: `<svg 
              xmlns="http://www.w3.org/2000/svg" 
              width="20" 
              height="20" 
              viewBox="0 0 24 24">
                <path fill="currentColor" d="M6.002 1.61L0 12.004L6.002 22.39h11.996L24 12.004L17.998 1.61zm1.593 4.084h3.947c3.605 0 6.276 1.695 6.276 6.31c0 4.436-3.21 6.302-6.456 6.302H7.595zm2.517 2.449v7.714h1.241c2.646 0 3.862-1.55 3.862-3.861c.009-2.569-1.096-3.853-3.767-3.853Z"/>
            </svg>`,
}

const profilesInfo = profiles.map(({ network, url }) => {
  const icon = SOCIAL_ICONS[network]
  const firstLetter = network[0].toUpperCase()

  return {
    id: network,
    section: 'Social',
    title: `Visit ${network}`,
    url,
    icon,
    hotkey: `ctrl+${firstLetter}`,
  }
})
---

<footer id='normal-footer' class='print:hidden flex flex-col gap-2'>
  <div>
    Press <kbd>Ctrl</kbd> + <kbd>K</kbd> to open the command palette.
  </div>
</footer>
<div class='footer-button print:hidden'>
  <Icon name='ri:command-fill' width={20} height={20} class="text-skin-hue"/>
</div>

<div
  id='hotkeypad'
  data-placeholder='Search Command'
  data-info={JSON.stringify(profilesInfo)}>
</div>

<script>
  interface Info {
    id: string
    section: string
    title: string
    url: string
    icon: string
    hotkey: string
    handler?: () => void
  }

  import { navigate } from 'astro:transitions/client'
  import HotKeyPad from 'hotkeypad'

  const hotkeypad = new HotKeyPad()
  const info = hotkeypad.instance.getAttribute('data-info') ?? '[]'
  const parsedInfo = JSON.parse(info) as Info[]

  // hotkeys for social links
  const data = parsedInfo.map(({ url, hotkey, icon, id, section, title }) => {
    return {
      id,
      title,
      icon,
      hotkey,
      section,
      handler: () => {
        window.open(url, '_blank')
      },
    }
  })

  // set commands in keypad
  hotkeypad.setCommands([
    {
      id: 'save',
      title: 'Download Resume',
      icon: `<svg 
              xmlns="http://www.w3.org/2000/svg"
              width="20" 
              height="20" 
              viewBox="0 0 24 24">
                <path fill="currentColor" d="m12 16l-5-5l1.4-1.45l2.6 2.6V4h2v8.15l2.6-2.6L17 11zm-6 4q-.825 0-1.412-.587T4 18v-3h2v3h12v-3h2v3q0 .825-.587 1.413T18 20z"/>
            </svg>`,
      hotkey: 'ctrl+S',
      section: 'Actions',
      handler: () => {
        navigate("/resume.pdf")
      },
    },
    ...data,
  ])

  const footerButtons = document.querySelectorAll('.footer-button')
  footerButtons.forEach(button => {
    button.addEventListener('click', () => {
      let event = new KeyboardEvent('keydown', {
        key: 'K',
        code: 'KeyK',
        keyCode: 75,
        which: 75,
        ctrlKey: true,
        altKey: false,
        shiftKey: false,
        metaKey: false,
      })
      document.dispatchEvent(event)
    })
  })
</script>

<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @media (min-width: 601px) {
    .footer-button {
      display: none;
    }
  }

  @media (max-width: 600px) {
    #normal-footer {
      display: none;
    }

    .footer-button {
      background: #fff;
      position: fixed;
      border: 1px solid #eee;
      right: 2rem;
      bottom: 2rem;
      width: 50px;
      height: 50px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
    }
  }

  footer {
    @apply bg-skin-button-accent;
    position: fixed;
    bottom: 0px;
    width: 100%;
    padding-block: 8px;
    text-align: center;
    font-size: 0.85rem;

    view-timeline-name: --revealing;
    view-timeline-axis: block;

    animation: linear 0.3s fadeIn;
    animation-timeline: --revealing;
    animation-range: entry 100% cover 10%;
  }
  kbd {
    @apply bg-skin-muted;
    border-radius: 4px;
    padding: 2px 4px;
    font-size: 12px;
  }
  #hotkeypad {
    --hotkeypad-bg-kbd: rgb(var(--muted));
    --hotkeypad-bg-backdrop: rgb(var(--color-fill));
    --hotkeypad-bg-container: rgb(var(--color-fill));
    --hotkeypad-bg-item-hover: rgba(var(--color), 10%);
    --hotkeypad-border-container: rgb(var(--muted));
    --hotkeypad-border-container-hover: rgb(var(--color-fill));
    --hotkeypad-fg-muted: rgb(var(--color-text-base));
  }
</style>
